# Stage 1: Build Stage (install Python dependencies)
FROM python:3.10-slim-buster as python_builder

# Install system dependencies for Graphviz and a C compiler
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    graphviz \
    libgraphviz-dev \
    gcc 

WORKDIR /app

# Copy requirements.txt first to leverage Docker caching
COPY requirements.txt ./

# Install Python dependencies directly into the system's Python installation
RUN pip install --no-cache-dir -r requirements.txt

# Stage 2: Final Runtime Stage
FROM node:16 as final_stage

# Install runtime system dependencies for Graphviz and Python 3.10
RUN apt update \
    && apt install -y --no-install-recommends software-properties-common \
    && add-apt-repository ppa:deadsnakes/ppa \
    && apt update \
    && apt install -y --no-install-recommends python3.10 \
    && apt install -y --no-install-recommends graphviz 

WORKDIR /opt/app

# Copy the Python installation (including site-packages and executables) from the builder stage
COPY --from=python_builder /usr/local/lib/python3.10/site-packages/ /usr/local/lib/python3.10/site-packages/
COPY --from=python_builder /usr/local/bin/ /usr/local/bin/

# --- NEW: Copy the start.sh script and make it executable ---
COPY start.sh /opt/app/start.sh
RUN chmod +x /opt/app/start.sh
# -------------------------------------------------------------

COPY . /opt/app/src

ENV PATH="/usr/local/bin:$PATH"
ENV NODE_ENV=container
ENV FLASK_APP=src/app.py
ENV BASENAME=/
ENV DEBUG=TRUE

CMD ["/opt/app/start.sh"]